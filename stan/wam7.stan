data { 
	int<lower=0> N;
	int<lower=0> dof;
	matrix[3, N] q;
	matrix[3, N] dq;
	matrix[3, N] sign_dq;
	matrix[3, N] ddq;
	matrix[3, N] tau;
}
transformed data { 
	matrix[dof, N] sin_q = sin(q);
	matrix[dof, N] cos_q = cos(q);
	row_vector[N] x0 = cos_q[2,:];
	row_vector[N] x1 = -x0;
	row_vector[N] x2 = -dq[1,:];
	row_vector[N] x3 = sin_q[2,:];
	row_vector[N] x4 = x2.*x3;
	row_vector[N] x5 = x1.*x2;
}
parameters { 
	real<lower=1e-6> r;
	real<lower=1e-6> m[dof];
	vector[3] r_com[dof];
	unit_vector[4] quat[dof];
	real<lower=0.0> Ia[dof];
	real<lower=0.0> fv[dof];
	real<lower=0.0> fc[dof];
	real<lower=0.0> fo[dof];
	real <lower=0.0> eig12;
	real <lower=0.0> eig13;
	real <lower=fmax(eig13-eig12,eig12-eig13), upper=eig12+eig13> eig11;
	real <lower=0.0> eig22;
	real <lower=0.0> eig23;
	real <lower=fmax(eig23-eig22,eig22-eig23), upper=eig22+eig23> eig21;
	real <lower=0.0> eig32;
	real <lower=0.0> eig33;
	real <lower=fmax(eig33-eig32,eig32-eig33), upper=eig32+eig33> eig31;
	real <lower=0.0> eig42;
	real <lower=0.0> eig43;
	real <lower=fmax(eig43-eig42,eig42-eig43), upper=eig42+eig43> eig41;
	real <lower=0.0> eig52;
	real <lower=0.0> eig53;
	real <lower=fmax(eig53-eig52,eig52-eig53), upper=eig52+eig53> eig51;
	real <lower=0.0> eig62;
	real <lower=0.0> eig63;
	real <lower=fmax(eig63-eig62,eig62-eig63), upper=eig62+eig63> eig61;
	real <lower=0.0> eig72;
	real <lower=0.0> eig73;
	real <lower=fmax(eig73-eig72,eig72-eig73), upper=eig72+eig73> eig71;
}
transformed parameters {
	vector[3] eigs[dof];
	matrix[3,3] R[dof];
	matrix[3,3] I[dof];
	vector[3] l[dof];
	real Lxx[dof];	real Lyy[dof];	real Lzz[dof];	real Lxy[dof];	real Lxz[dof];	real Lyz[dof];		eigs[1,1] = eig11; eigs[1,2] = eig12; eigs[1,3] = eig13;
	eigs[2,1] = eig21; eigs[2,2] = eig22; eigs[2,3] = eig23;
	eigs[3,1] = eig31; eigs[3,2] = eig32; eigs[3,3] = eig33;
	eigs[4,1] = eig41; eigs[4,2] = eig42; eigs[4,3] = eig43;
	eigs[5,1] = eig51; eigs[5,2] = eig52; eigs[5,3] = eig53;
	eigs[6,1] = eig61; eigs[6,2] = eig62; eigs[6,3] = eig63;
	eigs[7,1] = eig71; eigs[7,2] = eig72; eigs[7,3] = eig73;
	for (d in 1:dof){
		R[d,1,1] = quat[d,1]*quat[d,1] + quat[d,2]*quat[d,2] - quat[d,3]*quat[d,3] - quat[d,4]*quat[d,4]; R[d,1,2] = 2*(quat[d,2]*quat[d,3]-quat[d,1]*quat[d,4]); R[d,1,3] = 2*(quat[d,1]*quat[d,3]+quat[d,2]*quat[d,4]);
		R[d,2,1] = 2*(quat[d,2]*quat[d,3]+quat[d,1]*quat[d,4]); R[d,2,2] = quat[d,1]*quat[d,1] - quat[d,2]*quat[d,2] + quat[d,3]*quat[d,3] - quat[d,4]*quat[d,4]; R[d,2,3] = 2*(quat[d,3]*quat[d,4]-quat[d,1]*quat[d,2]);
		R[d,3,1] = 2*(quat[d,2]*quat[d,4]-quat[d,1]*quat[d,3]); R[d,3,2] = 2*(quat[d,1]*quat[d,2]+quat[d,3]*quat[d,4]); R[d,3,3] = quat[d,1]*quat[d,1] - quat[d,2]*quat[d,2] - quat[d,3]*quat[d,3] + quat[d,4]*quat[d,4];
		I[d] = diag_post_multiply(R[d],eigs[d]) * R[d]';
		l[d] = r_com[d] * m[d];
		Lxx[d] = I[d,1,1] + m[d]*pow(r_com[d,2],2) + m[d]*pow(r_com[d,3],2);
		Lyy[d] = I[d,2,2] + m[d]*pow(r_com[d,1],2) + m[d]*pow(r_com[d,3],2);
		Lzz[d] = I[d,3,3] + m[d]*pow(r_com[d,1],2) + m[d]*pow(r_com[d,2],2);
		Lxy[d] = I[d,1,2] - m[d]*r_com[d,1]*r_com[d,2];
		Lxz[d] = I[d,1,3] - m[d]*r_com[d,1]*r_com[d,3];
		Lyz[d] = I[d,2,3] - m[d]*r_com[d,2]*r_com[d,3];
	}
	row_vector[98] params = [Lxx[1], Lxy[1], Lxz[1], Lyy[1], Lyz[1], Lzz[1], l[1,1], l[1,2], l[1,3], m[1], Ia[1], fv[1], fc[1], fo[1], 
				Lxx[2], Lxy[2], Lxz[2], Lyy[2], Lyz[2], Lzz[2], l[2,1], l[2,2], l[2,3], m[2], Ia[2], fv[2], fc[2], fo[2], 
				Lxx[3], Lxy[3], Lxz[3], Lyy[3], Lyz[3], Lzz[3], l[3,1], l[3,2], l[3,3], m[3], Ia[3], fv[3], fc[3], fo[3], 
				Lxx[4], Lxy[4], Lxz[4], Lyy[4], Lyz[4], Lzz[4], l[4,1], l[4,2], l[4,3], m[4], Ia[4], fv[4], fc[4], fo[4], 
				Lxx[5], Lxy[5], Lxz[5], Lyy[5], Lyz[5], Lzz[5], l[5,1], l[5,2], l[5,3], m[5], Ia[5], fv[5], fc[5], fo[5], 
				Lxx[6], Lxy[6], Lxz[6], Lyy[6], Lyz[6], Lzz[6], l[6,1], l[6,2], l[6,3], m[6], Ia[6], fv[6], fc[6], fo[6], 
				Lxx[7], Lxy[7], Lxz[7], Lyy[7], Lyz[7], Lzz[7], l[7,1], l[7,2], l[7,3], m[7], Ia[7], fv[7], fc[7], fo[7]];
}
//model {
//	matrix[dof, N] tau_hat;
//		row_vector[N] x6 = dq[2,:]*params[16] + params[15]*x4 + params[17]*x5;
//	row_vector[N] x7 = dq[2,:]*params[18] + params[16]*x4 + params[19]*x5;
//	row_vector[N] x8 = -ddq[1,:];
//	row_vector[N] x9 = dq[2,:].*x4 + x1.*x8;
//	row_vector[N] x10 = -9.81*x3;
//	row_vector[N] x11 = -x5;
//	row_vector[N] x12 = dq[2,:].*x11 + x3.*x8;
//	row_vector[N] x13 = cos_q[5,:];
//	row_vector[N] x14 = cos_q[3,:];
//	row_vector[N] x15 = x14.*x4;
//	row_vector[N] x16 = sin_q[3,:];
//	row_vector[N] x17 = dq[2,:].*x16;
//	row_vector[N] x18 = x15 + x17;
//	row_vector[N] x19 = cos_q[4,:];
//	row_vector[N] x20 = -dq[3,:];
//	row_vector[N] x21 = x11 + x20;
//	row_vector[N] x22 = sin_q[4,:];
//	row_vector[N] x23 = x18.*x19 + x21.*x22;
//	row_vector[N] x24 = x13.*x23;
//	row_vector[N] x25 = dq[2,:].*x14;
//	row_vector[N] x26 = x16.*x4;
//	row_vector[N] x27 = -x26;
//	row_vector[N] x28 = x25 + x27;
//	row_vector[N] x29 = dq[4,:] + x28;
//	row_vector[N] x30 = sin_q[5,:];
//	row_vector[N] x31 = x29.*x30;
//	row_vector[N] x32 = x24 + x31;
//	row_vector[N] x33 = -dq[5,:];
//	row_vector[N] x34 = x12.*x16;
//	row_vector[N] x35 = -x34;
//	row_vector[N] x36 = ddq[2,:].*x14;
//	row_vector[N] x37 = x18.*x20 + x35 + x36;
//	row_vector[N] x38 = ddq[4,:] + x37;
//	row_vector[N] x39 = x13.*x38;
//	row_vector[N] x40 = -ddq[3,:] - x9;
//	row_vector[N] x41 = -x20;
//	row_vector[N] x42 = ddq[2,:].*x16;
//	row_vector[N] x43 = x12.*x14;
//	row_vector[N] x44 = x28.*x41 + x42 + x43;
//	row_vector[N] x45 = -dq[4,:];
//	row_vector[N] x46 = x18.*x22;
//	row_vector[N] x47 = -x19;
//	row_vector[N] x48 = x21.*x47;
//	row_vector[N] x49 = x46 + x48;
//	row_vector[N] x50 = x19.*x44 + x22.*x40 + x45.*x49;
//	row_vector[N] x51 = -x30;
//	row_vector[N] x52 = x32.*x33 + x39 + x50.*x51;
//	row_vector[N] x53 = cos_q[6,:];
//	row_vector[N] x54 = 0.045*((x14).*(x14)) + 0.045*((x16).*(x16));
//	row_vector[N] x55 = x25.*x54 + x27.*x54;
//	row_vector[N] x56 = 0.55*x25 - 0.55*x26;
//	row_vector[N] x57 = x19.*x56 + x22.*x55;
//	row_vector[N] x58 = ((x19).*(x19));
//	row_vector[N] x59 = ((x22).*(x22));
//	row_vector[N] x60 = -0.045*x58 - 0.045*x59;
//	row_vector[N] x61 = 0.045*dq[3,:];
//	row_vector[N] x62 = -0.55*x15 - 0.55*x17 + x5.*x54;
//	row_vector[N] x63 = x61 + x62;
//	row_vector[N] x64 = x46.*x60 + x48.*x60 + x63;
//	row_vector[N] x65 = x13.*x64 - 0.3*x24 - 0.3*x31 + x51.*x57;
//	row_vector[N] x66 = -x49;
//	row_vector[N] x67 = x33 + x66;
//	row_vector[N] x68 = sin_q[6,:];
//	row_vector[N] x69 = x32.*x53 + x67.*x68;
//	row_vector[N] x70 = -0.3*x30;
//	row_vector[N] x71 = x13.*x29;
//	row_vector[N] x72 = x13.*x57 + x23.*x70 + x30.*x64 + 0.3*x71;
//	row_vector[N] x73 = 0.045*x58 + 0.045*x59;
//	row_vector[N] x74 = x22.*x56 + x28.*x73 + x47.*x55;
//	row_vector[N] x75 = 0.045*dq[4,:];
//	row_vector[N] x76 = x74 + x75;
//	row_vector[N] x77 = -x76;
//	row_vector[N] x78 = -x53;
//	row_vector[N] x79 = x68.*x72 + x77.*x78;
//	row_vector[N] x80 = -x23;
//	row_vector[N] x81 = x30.*x80 + x71;
//	row_vector[N] x82 = dq[6,:] + x81;
//	row_vector[N] x84 = params[78]*x69 + params[80]*x79 + x82*-params[77];
//	row_vector[N] x85 = x10.*x14 + x11.*x61 - 0.55*x34 + 0.55*x36 + x41.*x62;
//	row_vector[N] x86 = 9.81*x0;
//	row_vector[N] x87 = -x86;
//	row_vector[N] x88 = -x18;
//	row_vector[N] x89 = x35.*x54 + x36.*x54 + x61.*x88 + x87;
//	row_vector[N] x90 = x19.*x85 + x22.*x89 + x28.*x75 + x45.*x74;
//	row_vector[N] x91 = x13.*x50;
//	row_vector[N] x92 = x30.*x38;
//	row_vector[N] x93 = x40.*x47;
//	row_vector[N] x94 = x22.*x44;
//	row_vector[N] x95 = -x16;
//	row_vector[N] x96 = 0.045*ddq[3,:] + x10.*x95 + x20.*x56 - 0.55*x42 - 0.55*x43 + x54.*x9;
//	row_vector[N] x97 = x60.*x93 + x60.*x94 + x75.*x80 + x96;
//	row_vector[N] x98 = x13.*x97 + x33.*x72 + x51.*x90 - 0.3*x91 - 0.3*x92;
//	row_vector[N] x100 = -x79;
//	row_vector[N] x101 = x53.*x72 + x68.*x77;
//	row_vector[N] x102 = x32.*x68 + x67.*x78;
//	row_vector[N] x103 = params[72]*x69 + params[74]*x82 + params[75]*x102 + params[77]*x100 + params[79]*x101;
//	row_vector[N] x104 = -x102;
//	row_vector[N] x105 = cos_q[7,:];
//	row_vector[N] x106 = sin_q[7,:];
//	row_vector[N] x107 = x106.*x82;
//	row_vector[N] x108 = x105.*x69;
//	row_vector[N] x109 = x107 + x108;
//	row_vector[N] x110 = x106.*x69;
//	row_vector[N] x111 = x105.*x82;
//	row_vector[N] x112 = -x110 + x111;
//	row_vector[N] x113 = x101.*x105 + x106.*x65 - 0.06*x110 + 0.06*x111;
//	row_vector[N] x114 = dq[7,:] + x102;
//	row_vector[N] x115 = params[86]*x109 + params[88]*x112 + params[89]*x114 + params[91]*x100 + params[93]*x113;
//	row_vector[N] x116 = -x114;
//	row_vector[N] x117 = -x33;
//	row_vector[N] x118 = x117.*x81 + x91 + x92;
//	row_vector[N] x119 = dq[4,:].*x23 + x93 + x94;
//	row_vector[N] x120 = -x119;
//	row_vector[N] x121 = -ddq[5,:] + x120;
//	row_vector[N] x122 = dq[6,:].*x69 + x118.*x68 + x121.*x78;
//	row_vector[N] x123 = ddq[7,:] + x122;
//	row_vector[N] x125 = -x106;
//	row_vector[N] x126 = x101.*x125 + x105.*x65 - 0.06*x107 - 0.06*x108;
//	row_vector[N] x127 = params[87]*x109 + params[89]*x112 + params[90]*x114 + params[91]*x126 + x113*-params[92];
//	row_vector[N] x129 = params[91]*x114 + params[94]*x126 + x109*-params[93];
//	row_vector[N] x130 = -dq[7,:];
//	row_vector[N] x131 = ddq[6,:] + x52;
//	row_vector[N] x132 = x105.*x131;
//	row_vector[N] x133 = -dq[6,:];
//	row_vector[N] x134 = x102.*x133 + x118.*x53 + x121.*x68;
//	row_vector[N] x135 = x109.*x130 + x125.*x134 + x132;
//	row_vector[N] x136 = 0.045*ddq[4,:] + dq[4,:].*x57 + x22.*x85 + x37.*x73 + x47.*x89;
//	row_vector[N] x137 = -x136;
//	row_vector[N] x138 = x117.*x65 + x13.*x90 + x30.*x97 + 0.3*x39 + x50.*x70;
//	row_vector[N] x139 = dq[6,:].*x101 + x137.*x78 + x138.*x68;
//	row_vector[N] x141 = params[92]*x109 + params[94]*x79 + x112*-params[91];
//	row_vector[N] x142 = x133.*x79 + x137.*x68 + x138.*x53;
//	row_vector[N] x143 = x106.*x131;
//	row_vector[N] x144 = x105.*x134;
//	row_vector[N] x145 = x105.*x98 + x113.*x130 + x125.*x142 - 0.06*x143 - 0.06*x144;
//	row_vector[N] x146 = dq[7,:].*x112 + x143 + x144;
//	row_vector[N] x147 = params[85]*x146 + params[86]*x135 + params[87]*x123 + params[92]*x139 + x100.*x129 + x112.*x127 + x115.*x116 + x126.*x141 + -params[93]*x145;
//	row_vector[N] x148 = params[93]*x112 + params[94]*x113 + x114*-params[92];
//	row_vector[N] x149 = -x141;
//	row_vector[N] x150 = params[91]*x123 + params[94]*x145 + x109.*x149 + x114.*x148 + -params[93]*x146;
//	row_vector[N] x151 = x105.*x150;
//	row_vector[N] x152 = -0.06*x106;
//	row_vector[N] x153 = dq[7,:].*x126 + x105.*x142 + x106.*x98 + 0.06*x132 + x134.*x152;
//	row_vector[N] x154 = params[85]*x109 + params[86]*x112 + params[87]*x114 + params[92]*x79 + x126*-params[93];
//	row_vector[N] x155 = params[86]*x146 + params[88]*x135 + params[89]*x123 + params[93]*x153 - x109.*x127 + x113.*x149 + x114.*x154 + x139*-params[91] + x148.*x79;
//	row_vector[N] x156 = params[93]*x135 + params[94]*x153 + x112.*x141 + x116.*x129 + x123*-params[92];
//	row_vector[N] x157 = params[77]*x102 + params[80]*x65 + x69*-params[79];
//	row_vector[N] x158 = -x101;
//	row_vector[N] x159 = params[73]*x69 + params[75]*x82 + params[76]*x102 + params[77]*x65 + params[78]*x158;
//	row_vector[N] x160 = params[71]*x134 + params[72]*x131 + params[73]*x122 + params[78]*x139 + x100.*x157 + x103.*x104 + x105.*x147 + x125.*x155 - 0.06*x151 + x152.*x156 + x159.*x82 + x65.*x84 + x98*-params[79];
//	row_vector[N] x161 = -x72;
//	row_vector[N] x162 = params[59]*x32 + params[61]*x67 + params[62]*x81 + params[63]*x77 + params[64]*x161;
//	row_vector[N] x164 = params[63]*x81 + params[66]*x77 + -params[65]*x32;
//	row_vector[N] x166 = params[64]*x32 + params[66]*x65 + -params[63]*x67;
//	row_vector[N] x167 = params[78]*x104 + params[79]*x82 + params[80]*x101;
//	row_vector[N] x168 = -x167;
//	row_vector[N] x170 = params[71]*x69 + params[72]*x82 + params[73]*x102 + params[78]*x79 + x65*-params[79];
//	row_vector[N] x171 = -x148;
//	row_vector[N] x172 = params[87]*x146 + params[89]*x135 + params[90]*x123 + params[91]*x145 + x109.*x115 - x112.*x154 + x113.*x129 + -params[92]*x153 + x126.*x171;
//	row_vector[N] x173 = params[73]*x134 + params[75]*x131 + params[76]*x122 + params[77]*x98 + x101.*x157 + x103.*x69 + x142*-params[78] + x168.*x65 - x170.*x82 + x172;
//	row_vector[N] x174 = params[58]*x32 + params[60]*x67 + params[61]*x81 + params[65]*x72 + -params[63]*x65;
//	row_vector[N] x175 = -x81;
//	row_vector[N] x176 = params[57]*x118 + params[58]*x121 + params[59]*x52 + params[64]*x98 + x137*-params[65] + x160.*x53 + x162.*x67 - x164.*x65 + x166.*x77 + x173.*x68 + x174.*x175;
//	row_vector[N] x177 = x105.*x156;
//	row_vector[N] x178 = params[79]*x131 + params[80]*x142 + x104.*x157 + x122*-params[78] + x125.*x150 + x177 + x82.*x84;
//	row_vector[N] x179 = params[78]*x134 + params[80]*x139 + params[92]*x146 + params[94]*x139 + x109.*x129 + x112.*x171 + x131*-params[77] + x135*-params[91] + x157.*x69 + x168.*x82;
//	row_vector[N] x181 = params[65]*x121 + params[66]*x138 + x164.*x175 + x166.*x67 + x178.*x53 + x179.*x68 + -params[64]*x52;
//	row_vector[N] x182 = -x69;
//	row_vector[N] x183 = params[72]*x134 + params[74]*x131 + params[75]*x122 + params[79]*x142 + x102.*x170 + x105.*x155 + x106.*x147 + x139*-params[77] + x150.*x152 + x158.*x84 + x159.*x182 + x167.*x79 + 0.06*x177;
//	row_vector[N] x184 = params[57]*x32 + params[58]*x67 + params[59]*x81 + params[64]*x65 + -params[65]*x77;
//	row_vector[N] x185 = -x67;
//	row_vector[N] x186 = params[64]*x175 + params[65]*x67 + params[66]*x72;
//	row_vector[N] x187 = params[59]*x118 + params[61]*x121 + params[62]*x52 + params[63]*x137 + x138*-params[64] + x164.*x72 + x174.*x32 + x183 + x184.*x185 - x186.*x77;
//	row_vector[N] x188 = params[44]*x23 + params[46]*x29 + params[47]*x49 + params[49]*x77 + params[51]*x57;
//	row_vector[N] x189 = -x29;
//	row_vector[N] x190 = params[49]*x189 + params[50]*x23 + params[52]*x76;
//	row_vector[N] x191 = -x57;
//	row_vector[N] x192 = params[45]*x23 + params[47]*x29 + params[48]*x49 + params[49]*x64 + params[50]*x191;
//	row_vector[N] x193 = params[49]*x49 + params[51]*x80 + params[52]*x64;
//	row_vector[N] x194 = params[64]*x118 + params[66]*x98 + params[77]*x122 + params[80]*x98 + x102.*x167 + x106.*x156 + x121*-params[63] + x134*-params[79] + x151 + x164.*x32 + x182.*x84 + x185.*x186;
//	row_vector[N] x195 = x13.*x194;
//	row_vector[N] x197 = params[43]*x50 + params[44]*x38 + params[45]*x119 + params[50]*x136 + x13.*x176 + x181.*x70 + x187.*x51 + x188.*x66 + x190.*x64 + x192.*x29 + x193.*x77 - 0.3*x195 + -params[51]*x97;
//	row_vector[N] x198 = params[50]*x66 + params[51]*x29 + params[52]*x57;
//	row_vector[N] x199 = params[49]*x119 + params[52]*x97 + x181.*x30 + x190.*x80 + x195 + -params[51]*x50 + x198.*x49;
//	row_vector[N] x200 = x199.*x60;
//	row_vector[N] x202 = params[36]*x18 + params[38]*x63 + -params[35]*x21;
//	row_vector[N] x203 = -x56;
//	row_vector[N] x204 = -x32;
//	row_vector[N] x205 = -params[58]*x118 - params[60]*x121 - params[61]*x52 - params[65]*x138 - x160.*x68 - x161.*x166 - x162.*x204 - -params[63]*x98 - x173.*x78 - x184.*x81 - x186.*x65;
//	row_vector[N] x206 = params[43]*x23 + params[44]*x29 + params[45]*x49 + params[50]*x76 + -params[51]*x64;
//	row_vector[N] x207 = params[45]*x50 + params[47]*x38 + params[48]*x119 + params[49]*x97 - params[50]*x90 + x188.*x23 + x189.*x206 + x193.*x57 - x198.*x64 + x205;
//	row_vector[N] x208 = -x28;
//	row_vector[N] x209 = params[36]*x208 + params[37]*x21 + params[38]*x56;
//	row_vector[N] x210 = params[31]*x18 + params[33]*x21 + params[34]*x28 + params[35]*x55 + params[36]*x203;
//	row_vector[N] x212 = params[29]*x18 + params[30]*x21 + params[31]*x28 + params[36]*x63 + -params[37]*x55;
//	row_vector[N] x213 = -params[30]*x44 - params[32]*x40 - params[33]*x37 - params[37]*x85 - x197.*x22 - x200.*x47 - -params[35]*x96 - x202.*x203 - x207.*x47 - x209.*x63 - x210.*x88 - x212.*x28;
//	row_vector[N] x214 = params[35]*x28 + params[37]*x88 + params[38]*x55;
//	row_vector[N] x215 = -x209;
//	row_vector[N] x216 = params[36]*x44 + params[38]*x96 + x18.*x214 + x199 + -params[35]*x40 + x21.*x215;
//	row_vector[N] x217 = params[30]*x18 + params[32]*x21 + params[33]*x28 + params[37]*x56 + -params[35]*x63;
//	row_vector[N] x218 = params[29]*x44 + params[30]*x40 + params[31]*x37 + params[36]*x96 + x19.*x197 + x200.*x22 + x202.*x55 + x207.*x22 + x208.*x217 + x21.*x210 + -params[37]*x89 - x214.*x63;
//	row_vector[N] x219 = x13.*x181;
//	row_vector[N] x220 = params[44]*x50 + params[46]*x38 + params[47]*x119 + params[49]*x137 + params[51]*x90 + x13.*x187 + x176.*x30 + x190.*x191 + x192.*x80 + x194.*x70 + x198.*x76 + x206.*x49 + 0.3*x219;
//	row_vector[N] x221 = -params[49]*x38 + params[50]*x50 + params[52]*x136 - params[63]*x52 - params[66]*x137 - x118*-params[65] - x166.*x204 - x178.*x68 - x179.*x78 - x186.*x81 + x189.*x198 + x193.*x23;
//	row_vector[N] x223 = params[31]*x44 + params[33]*x40 + params[34]*x37 + params[35]*x89 + x18.*x217 - x21.*x212 + x214.*x56 + x215.*x55 + x220 + x221.*x73 + -params[36]*x85;
//	row_vector[N] x224 = params[50]*x120 + params[51]*x38 + params[52]*x90 + x190.*x29 + x193.*x66 + x194.*x51 + x219;
//	row_vector[N] x225 = params[37]*x40 + params[38]*x85 + x19.*x224 + x202.*x21 + x208.*x214 + x22.*x221 + -params[36]*x37;
//	row_vector[N] x226 = -0.55*x216;
//	row_vector[N] x227 = dq[2,:]*params[19] + params[17]*x4 + params[20]*x5;
//	row_vector[N] x228 = x54.*(params[35]*x37 + params[38]*x89 + x202.*x88 + x209.*x28 + -params[37]*x44 + x22.*x224 + x221.*x47);
////
//	tau_hat[1,:] = ddq[1,:]*params[11] + dq[1,:]*params[12] + params[13]*sign_dq[1,:] + params[14] - params[4]*x8 - x1.*(ddq[2,:]*params[19] - dq[2,:].*x6 + params[17]*x12 + params[20]*x9 - params[22]*x10 + x213 + x216.*x54 + x4.*x7) - x3.*(ddq[2,:]*params[16] + dq[2,:].*x227 + params[15]*x12 + params[17]*x9 + params[22]*x86 + x11.*x7 + x14.*x218 + x14.*x226 - 0.55*x16.*x225 + x223.*x95 + x228.*x95);
//	tau_hat[2,:] = ddq[2,:]*params[18] + ddq[2,:]*params[25] + dq[2,:]*params[26] + params[16]*x12 + params[19]*x9 + params[21]*x87 + params[23]*x10 + params[27]*sign_dq[2,:] + params[28] + x14.*x223 + 0.55*x14.*x225 + x14.*x228 + x16.*x218 + x16.*x226 - x227.*x4 + x5.*x6;
//	tau_hat[3,:] = ddq[3,:]*params[39] + dq[3,:]*params[40] + params[41]*sign_dq[3,:] + params[42] + x213 + 0.045*x216;
//	tau_hat[4,:] = ddq[4,:]*params[53] + dq[4,:]*params[54] + params[55]*sign_dq[4,:] + params[56] + x220 + 0.045*x221;
//	tau_hat[5,:] = ddq[5,:]*params[67] + dq[5,:]*params[68] + params[69]*sign_dq[5,:] + params[70] + x205;
//	tau_hat[6,:] = ddq[6,:]*params[81] + dq[6,:]*params[82] + params[83]*sign_dq[6,:] + params[84] + x183;
//	tau_hat[7,:] = ddq[7,:]*params[95] + dq[7,:]*params[96] + params[97]*sign_dq[7,:] + params[98] + x172;
////
//		r ~ cauchy(0, 1.0);
//	for (d in 1:dof){
//		r_com[d] ~ cauchy(0, 1.0);
//		Ia[d] ~ cauchy(0, 1.0);
//		fv[d] ~ cauchy(0, 1.0);
//		fc[d] ~ cauchy(0, 1.0);
//		fo[d] ~ cauchy(0, 1.0);
//	}
//	eig11 ~ cauchy(0, 1);
//	eig12 ~ cauchy(0, 1);
//	eig13 ~ cauchy(0, 1);
//	eig21 ~ cauchy(0, 1);
//	eig22 ~ cauchy(0, 1);
//	eig23 ~ cauchy(0, 1);
//	eig31 ~ cauchy(0, 1);
//	eig32 ~ cauchy(0, 1);
//	eig33 ~ cauchy(0, 1);
//	eig41 ~ cauchy(0, 1);
//	eig42 ~ cauchy(0, 1);
//	eig43 ~ cauchy(0, 1);
//	eig51 ~ cauchy(0, 1);
//	eig52 ~ cauchy(0, 1);
//	eig53 ~ cauchy(0, 1);
//	eig61 ~ cauchy(0, 1);
//	eig62 ~ cauchy(0, 1);
//	eig63 ~ cauchy(0, 1);
//	eig71 ~ cauchy(0, 1);
//	eig72 ~ cauchy(0, 1);
//	eig73 ~ cauchy(0, 1);
//	tau[1, :] ~ normal(tau_hat[1, :], r);
//	tau[2, :] ~ normal(tau_hat[2, :], r);
//	tau[3, :] ~ normal(tau_hat[3, :], r);
//	tau[4, :] ~ normal(tau_hat[4, :], r);
//	tau[5, :] ~ normal(tau_hat[5, :], r);
//	tau[6, :] ~ normal(tau_hat[6, :], r);
//	tau[7, :] ~ normal(tau_hat[7, :], r);
//}
